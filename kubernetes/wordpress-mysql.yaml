#creando pvc
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-aks-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:  # Aquí empieza la definición del pod correctamente
      containers:
        - name: mysql
          # image: pv.azurecr.io/mysql:v1
          image: mycontainerregistryfroque.azurecr.io/mysql:v1
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DATABASE
              value: "wordpress"
            - name: MYSQL_USER
              value: "wordpress_admin"
            - name: MYSQL_PASSWORD
              value: "wordpress_admin_password"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: my-aks-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
  #clusterIP: None  # Utilizamos una IP interna para que WordPress pueda acceder a MySQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: mycontainerregistryfroque.azurecr.io/wordpress:v1  # Reemplaza con tu ACR
          env:
            - name: WORDPRESS_DB_HOST
              value: "mysql-service:3306"  # Apunta al servicio de MySQL
            - name: WORDPRESS_DB_NAME
              value: "wordpress"
            - name: WORDPRESS_DB_USER
              value: "wordpress_admin"
            - name: WORDPRESS_DB_PASSWORD
              value: "wordpress_admin_password"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-service
spec:
  selector:
    app: wordpress
  ports:
    - protocol: TCP
      port: 80
  type: LoadBalancer  # Para acceder a WordPress desde fuera
############