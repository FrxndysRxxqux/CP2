---
- name: Update apt cache
  apt:
    update_cache: yes

- name: Remove old Podman repository if exists
  file:
    path: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    state: absent

- name: Remove old GPG key if exists
  apt_key:
    url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_18.04/Release.key"
    state: absent

  ignore_errors: yes
- name: Install required packages
  apt:
    name:
      - python3
      - python3-apt
      - curl
      - wget
      - gnupg2
      - azure-cli
    state: present

- name: Add Podman repository
  shell: |
    echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    wget -nv "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key" -O- | apt-key add -
  args:
    creates: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list

- name: Update apt cache again
  apt:
    update_cache: yes

- name: Install Podman
  apt:
    name: podman
    state: present

- name: Enable user linger for adminuser
  command: loginctl enable-linger {{ ansible_user }}
  ignore_errors: yes

- name: Login to quay.io using existing secret called password
  containers.podman.podman_login:
    username: "{{ acr_username }}"
    secret: "{{ acr_password }}"
    registry: "{{ansible_acr_linkio}}"
    
- name: Download podman image
  containers.podman.podman_image:
    name: "{{ ansible_acr_linkio }}/nginx-custom:v1"
    state: present

- name: Launch nginx container with port mapping
  containers.podman.podman_container:
    name: nginx-custom-container
    image: "{{ ansible_acr_linkio }}/nginx-custom:v1"
    state: started
    ports:
      - "8080:80"  # Mapea el puerto 8080 del host al 80 del contenedor
    # name: "{{ ansible_acr_linkio }}/nginx-custom:v1"
    # state: present

