---
- name: Update apt cache
  apt:
    update_cache: yes

- name: Remove old Podman repository if exists
  file:
    path: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    state: absent
    
  ignore_errors: yes
- name: Install required packages
  apt:
    name:
      - python3
      - python3-apt
      - curl
      - wget
      - gnupg2
      - azure-cli
    state: present

#podman 3.4
- name: Add Podman repository
  shell: |
    echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    wget -nv "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_20.04/Release.key" -O- | apt-key add -
  args:
    creates: /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list

- name: Update apt cache again
  apt:
    update_cache: yes

- name: Install Podman
  apt:
    name: podman
    state: present

- name: Install skopeo
  apt:
    name: skopeo
    state: present

- name: Verify Podman version
  command: podman --version
  register: podman_version

#inicio/login en el acr
- name: Login to quay.io using existing secret called password
  containers.podman.podman_login:
    username: "{{ acr_username }}"
    password: "{{ acr_password }}"
    registry: "{{ansible_acr_linkio}}"

- name: Push WordPress image to ACR using Skopeo
  command: >
    skopeo copy docker://{{dockerhub_global}}/wordpress:v1
    docker://{{ansible_acr_linkio}}/wordpress:v1

- name: Push MySQL image to ACR using Skopeo
  command: >
    skopeo copy docker://{{dockerhub_global}}/mysql:v1
    docker://{{ansible_acr_linkio}}/mysql:v1

- name: Push Nginx image to ACR using Skopeo
  command: >
    skopeo copy docker://{{dockerhub_global}}/nginx-custom:v1
    docker://{{ansible_acr_linkio}}/nginx-custom:v1

#descarga de imagen 
- name: Download/pull nginx-custom image
  containers.podman.podman_image:
    name: "{{ ansible_acr_linkio }}/nginx-custom:v1"
    state: present

#lanzar imagen en el container con mapeo de puertos
- name: Launch nginx container with port mapping
  containers.podman.podman_container:
    name: nginx-custom-container
    image: "{{ ansible_acr_linkio }}/nginx-custom:v1"
    state: started
    ports:
      - "8080:80"  # Mapea el puerto 8080 del host al 80 del contenedor

